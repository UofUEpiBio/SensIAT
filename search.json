[{"path":"https://uofuepibio.github.io/SensIAT/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 University Utah Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Redd. Author, maintainer. Yujing Gao. Author. Shu Yang. Author. Bonnie Smith. Author. Ravi Varadhan. Author. Agatha Mallett. Contributor, contractor. Daniel Scharfstein. Project director, author. University Utah. Copyright holder.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Redd , Gao Y, Yang S, Smith B, Varadhan R, Scharfstein D (2025). SensIAT: Sensitivity Analysis Irregular Assessment Times. R package version 0.3.0.9000, https://github.com/UofUEpiBio/SensIAT.","code":"@Manual{,   title = {SensIAT: Sensitivity Analysis for Irregular Assessment Times},   author = {Andrew Redd and Yujing Gao and Shu Yang and Bonnie Smith and Ravi Varadhan and Daniel Scharfstein},   year = {2025},   note = {R package version 0.3.0.9000},   url = {https://github.com/UofUEpiBio/SensIAT}, }"},{"path":"https://uofuepibio.github.io/SensIAT/index.html","id":"sensiat","dir":"","previous_headings":"","what":"Sensitivity Analysis for Irregular Assessment Times","title":"Sensitivity Analysis for Irregular Assessment Times","text":"R Package sensitivity analysis irregular assessment times. link paper describing methodology can found .","code":""},{"path":"https://uofuepibio.github.io/SensIAT/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sensitivity Analysis for Irregular Assessment Times","text":"can also install current development version GitHub:","code":"# Install from CRAN install.packages(\"SensIAT\") devtools::install_github(\"UofUEpiBio/pcoriRPackage\")"},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SensIAT: Sensitivity Analysis for Irregular Assessment Times — SensIAT-package","title":"SensIAT: Sensitivity Analysis for Irregular Assessment Times — SensIAT-package","text":"Sensitivity analysis trials irregular informative assessment times, based new influence function-based, augmented inverse intensity-weighted estimator.","code":""},{"path":[]},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SensIAT: Sensitivity Analysis for Irregular Assessment Times — SensIAT-package","text":"Maintainer: Andrew Redd andrew.redd@hsc.utah.edu (ORCID) Authors: Yujing Gao ygao39@ncsu.edu Shu Yang syang24@ncsu.edu Bonnie Smith bsmit179@jhmi.edu Ravi Varadhan ravi.varadhan@jhu.edu Daniel Scharfstein daniel.scharfstein@hsc.utah.edu (ORCID) [project director] contributors: Agatha Mallett agatha@geometrian.com [contributor, contractor] University Utah [copyright holder]","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"SensIAT Example Data — SensIAT_example_data","title":"SensIAT Example Data — SensIAT_example_data","text":"simulated dataset use SensIAT tutorial, testing documentation.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SensIAT Example Data — SensIAT_example_data","text":"","code":"SensIAT_example_data  SensIAT_example_fulldata"},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SensIAT Example Data — SensIAT_example_data","text":"SensIAT_example_data data frame 779 rows 4 variables consisting 200 simulated patients.  row data represents visit patient. columns : Subject_ID unique identifier patient. Visit ordinal number visit patient.  Baseline observation 0. Time time visit days, since baseline. Outcome outcome interest. SensIAT_example_fulldata data frame 1614 rows 5 variables consisting 400 simulated patients, 200 treatment arm.  row data represents visit patient. columns : Subject_ID unique identifier patient. Visit ordinal number visit patient.  Baseline observation 0. Time time visit days, since baseline. Outcome outcome interest. Treatment_group Treatment control group.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"SensIAT Example Data — SensIAT_example_data","text":"SensIAT_example_fulldata: simulated dataset treatment control groups.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds an S3 class to an object — add_class","title":"Adds an S3 class to an object — add_class","text":"Adds S3 class object","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds an S3 class to an object — add_class","text":"","code":"add_class(x, class)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds an S3 class to an object — add_class","text":"x object class added. class character vector class names added.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds an S3 class to an object — add_class","text":"","code":"add_class(TRUE, 'flag') #> [1] TRUE #> attr(,\"class\") #> [1] \"flag\"    \"logical\""},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_terminal_observations.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Terminal Observations to a Dataset — add_terminal_observations","title":"Add Terminal Observations to a Dataset — add_terminal_observations","text":"function adds terminal observations dataset. subject given id, subject less maximum number observations, row added end time value, leaving variables NA.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_terminal_observations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Terminal Observations to a Dataset — add_terminal_observations","text":"","code":"add_terminal_observations(   data,   id,   time,   end = max(pull(data, {      {          time      }  })) )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_terminal_observations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Terminal Observations to a Dataset — add_terminal_observations","text":"data data frame containing dataset. id variable data identifies subject. time variable data identifies time observation. end value use time variable terminal observation. end less maximum dataset resulting data filtered time less equal end.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_terminal_observations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Terminal Observations to a Dataset — add_terminal_observations","text":"data frame terminal observations added.","code":""},{"path":[]},{"path":"https://uofuepibio.github.io/SensIAT/reference/add_terminal_observations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Terminal Observations to a Dataset — add_terminal_observations","text":"","code":"exdata <- tibble::tibble(   patient = rep(1:3, 3:5),   day = c(0, 30, 60,           0, 30, 60, 90,           0, 30, 60, 90, 120),   value = TRUE ) add_terminal_observations(exdata, patient, day) #> # A tibble: 14 × 3 #> # Groups:   patient [3] #>    patient   day value #>      <int> <dbl> <lgl> #>  1       1     0 TRUE  #>  2       1    30 TRUE  #>  3       1    60 TRUE  #>  4       1   120 NA    #>  5       2     0 TRUE  #>  6       2    30 TRUE  #>  7       2    60 TRUE  #>  8       2    90 TRUE  #>  9       2   120 NA    #> 10       3     0 TRUE  #> 11       3    30 TRUE  #> 12       3    60 TRUE  #> 13       3    90 TRUE  #> 14       3   120 TRUE"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_jackknife_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for Estimated Treatment Effect for SensIAT_fulldata_jackknife_results Objects — autoplot.SensIAT_fulldata_jackknife_results","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_jackknife_results Objects — autoplot.SensIAT_fulldata_jackknife_results","text":"horizontal vertical axes represent sensitivity parameter alpha control treatment groups, respectively. plot shows combination alpha values zero 95% confidence interval contains zero, otherwise bound confidence interval closest zero.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_jackknife_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_jackknife_results Objects — autoplot.SensIAT_fulldata_jackknife_results","text":"","code":"# S3 method for class 'SensIAT_fulldata_jackknife_results' autoplot(object, ..., include.rugs = NA)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_jackknife_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_jackknife_results Objects — autoplot.SensIAT_fulldata_jackknife_results","text":"object SensIAT_fulldata_jackknife_results object. ... Additional arguments passed predict. include.rugs TRUE, adds rugs plot. FALSE, rugs added. NA, rugs added number distinct values alpha_control alpha_treatment less equal 10.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_jackknife_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_jackknife_results Objects — autoplot.SensIAT_fulldata_jackknife_results","text":"","code":"# Note: fitting the jackknife is computationally expensive, #       so this example is here for reference. if (FALSE) { # \\dontrun{ full.object <-     fit_SensIAT_fulldata_model(         data = SensIAT_example_fulldata,         trt = Treatment_group == 'treatment',         outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,         id = Subject_ID,         outcome = Outcome,         time = Time,         knots = c(60, 260, 460),         alpha = c(-0.6, -0.3, 0, 0.3, 0.6)     ) jk.full.model <- jackknife(full.object, time = 180) ggplot2::autoplot(jk.full.model) } # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for Estimated Treatment Effect for SensIAT_fulldata_model Objects — autoplot.SensIAT_fulldata_model","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_model Objects — autoplot.SensIAT_fulldata_model","text":"horizontal vertical axes represent sensitivity parameter alpha control treatment groups, respectively. contour plot shows estimated treatment effect combination alpha values.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_model Objects — autoplot.SensIAT_fulldata_model","text":"","code":"# S3 method for class 'SensIAT_fulldata_model' autoplot(object, time, include.rugs = NA, ...)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_model Objects — autoplot.SensIAT_fulldata_model","text":"object SensIAT_fulldata_model object. time Time plot estimates. include.rugs TRUE, adds rugs indicating locations sensitivity evaluated plot. FALSE, rugs added. NA, rugs added number distinct values alpha_control alpha_treatment less equal 10. ... Additional arguments passed predict.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_model Objects — autoplot.SensIAT_fulldata_model","text":"ggplot2 object.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_fulldata_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot for Estimated Treatment Effect for SensIAT_fulldata_model Objects — autoplot.SensIAT_fulldata_model","text":"","code":"# \\donttest{ full.object <-     fit_SensIAT_fulldata_model(         data = SensIAT_example_fulldata,         trt = Treatment_group == 'treatment',         outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,         id = Subject_ID,         outcome = Outcome,         time = Time,         knots = c(60, 260, 460),         alpha = c(-0.6, -0.3, 0, 0.3, 0.6)     ) ggplot2::autoplot(full.object, time = 180)  # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_within_group_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a SensIAT_within_group_model Object — autoplot.SensIAT_within_group_model","title":"Plot a SensIAT_within_group_model Object — autoplot.SensIAT_within_group_model","text":"creates line plot SensIAT_within_group_model object. horizontal axis represents time, vertical axis represents expected marginal outcome given sensitivity parameter alpha.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_within_group_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a SensIAT_within_group_model Object — autoplot.SensIAT_within_group_model","text":"","code":"# S3 method for class 'SensIAT_within_group_model' autoplot(object, ...)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_within_group_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a SensIAT_within_group_model Object — autoplot.SensIAT_within_group_model","text":"object SensIAT_within_group_model object. ... currently ignored","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_within_group_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a SensIAT_within_group_model Object — autoplot.SensIAT_within_group_model","text":"ggplot2 object.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_within_group_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a SensIAT_within_group_model Object — autoplot.SensIAT_within_group_model","text":"","code":"# Note: example takes a few seconds to run. # \\donttest{ object <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = fit_SensIAT_single_index_fixed_bandwidth_model,         id = Subject_ID,         outcome = Outcome,         time = Time,         knots = c(60,260,460),         End = 830,         alpha = c(-0.6, -0.3, 0, 0.3, 0.6),         intensity.args=list(bandwidth=30)     ) ggplot2::autoplot(object) +     # Title not included     ggplot2::ggtitle(\"SensIAT within group model\") +     # Nor are bounds on reasonable values of alpha     ggplot2::geom_hline(yintercept = c(1.2, 3), linetype = \"dotted\", linewidth = 1.5)  # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_withingroup_jackknife_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Estimates at Given Times for SensIAT_withingroup_jackknife_results Objects — autoplot.SensIAT_withingroup_jackknife_results","title":"Plot Estimates at Given Times for SensIAT_withingroup_jackknife_results Objects — autoplot.SensIAT_withingroup_jackknife_results","text":"Horizontal axis represents time, vertical axis represents outcome model. Point plotted mean estimate, error bars show 95% confidence interval using variance estimated jackknife.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_withingroup_jackknife_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Estimates at Given Times for SensIAT_withingroup_jackknife_results Objects — autoplot.SensIAT_withingroup_jackknife_results","text":"","code":"# S3 method for class 'SensIAT_withingroup_jackknife_results' autoplot(object, width = NULL, ...)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_withingroup_jackknife_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Estimates at Given Times for SensIAT_withingroup_jackknife_results Objects — autoplot.SensIAT_withingroup_jackknife_results","text":"object SensIAT_withingroup_jackknife_results object produced SensIAT_jackknife. width Width dodge position, default half minimum distance time evaluation points. ... Ignored.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_withingroup_jackknife_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Estimates at Given Times for SensIAT_withingroup_jackknife_results Objects — autoplot.SensIAT_withingroup_jackknife_results","text":"ggplot2 object.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/autoplot.SensIAT_withingroup_jackknife_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Estimates at Given Times for SensIAT_withingroup_jackknife_results Objects — autoplot.SensIAT_withingroup_jackknife_results","text":"","code":"# Note: fitting the jackknife is computationally expensive, #       so this example is here for reference. if (FALSE) { # \\dontrun{ fitted <- fit_SensIAT_within_group_model(     group.data = SensIAT_example_data,     outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,     alpha = c(-0.6, -0.3, 0, 0.3, 0.6),     id = Subject_ID,     outcome = Outcome,     time = Time,     intensity.args=list(bandwidth = 30),     knots = c(60,260,460),     End = 830 ) jackknife.estimates <- SensIAT_jackknife(fitted, time = c(90, 180, 270, 360, 450)) ggplot2::autoplot(jackknife.estimates) } # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"Compute Conditional Expected Values based Outcome Model","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"","code":"compute_SensIAT_expected_values(   model,   alpha = 0,   new.data = model.frame(model),   ... )  # S3 method for class 'lm' compute_SensIAT_expected_values(model, alpha, new.data, ...)  # S3 method for class 'glm' compute_SensIAT_expected_values(   model,   alpha,   new.data,   ...,   y.max = NULL,   eps = .Machine$double.eps )  # S3 method for class 'negbin' compute_SensIAT_expected_values(   model,   alpha,   new.data,   ...,   y.max = NULL,   eps = .Machine$double.eps^(1/4) )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"model object representing output outcome model. alpha sensitivity parameter new.data Data compute conditional means , defaults model frame fitted model. ... passed onto methods. y.max maximum value outcome variable Poisson Negative Binomial models. omitted chosen quantile function distribution 1-eps. eps tolerance quantile function used estimate y.max, default .Machine$double.eps.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"new.data frame additional columns alpha, E_Yexp_alphaY, E_exp_alphaY appended.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"Compute conditional expectations needed predictions models. Two additional values/expectations computed: $E \\big[ Y(t) \\exp \\{  \\alpha Y(t) \\}   | (t)=1, \\bar{O}(t) \\big]$, returned E_Yexp_alphaY, $E \\big[ \\exp \\{ \\alpha Y(t) \\} \\  | (t)=1, \\bar{O}(t) \\big]$, returned E_exp_alphaY. methods shown ","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"compute_SensIAT_expected_values(lm): (Gaussian) Linear Model method stats::integrate method used compute conditional expectations. compute_SensIAT_expected_values(glm): Generalized Linear Model method compute_SensIAT_expected_values(negbin): Negative Binomial Model method","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_SensIAT_expected_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Conditional Expected Values based on Outcome Model — compute_SensIAT_expected_values","text":"","code":"model <- lm(mpg ~ as.factor(cyl)+disp+wt, data=mtcars) compute_SensIAT_expected_values(model, alpha= c(-0.3, 0, 0.3), new.data = mtcars[1:5, ]) #>                         mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4...1          21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag...2      21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710...3         22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive...4     21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout...5  18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Mazda RX4...6          21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag...7      21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710...8         22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive...9     21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout...10 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Mazda RX4...11         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag...12     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710...13        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive...14    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout...15 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #>                        E_Yexp_alphaY E_exp_alphaY #> Mazda RX4...1           4.335670e-02 2.244828e-03 #> Mazda RX4 Wag...2       5.339876e-02 2.890980e-03 #> Datsun 710...3          1.153856e-02 4.705305e-04 #> Hornet 4 Drive...4      6.745769e-02 3.851517e-03 #> Hornet Sportabout...5   1.249134e-01 8.367589e-03 #> Mazda RX4...6           2.134680e+01 1.000000e+00 #> Mazda RX4 Wag...7       2.050358e+01 1.000000e+00 #> Datsun 710...8          2.655522e+01 1.000000e+00 #> Hornet 4 Drive...9      1.954734e+01 1.000000e+00 #> Hornet Sportabout...10  1.696102e+01 1.000000e+00 #> Mazda RX4...11          1.916457e+04 8.197146e+02 #> Mazda RX4 Wag...12      1.434446e+04 6.365034e+02 #> Datsun 710...13         1.117999e+05 3.910732e+03 #> Hornet 4 Drive...14     1.031021e+04 4.777646e+02 #> Hornet Sportabout...15  4.176927e+03 2.199103e+02 model <- glm(cyl ~ mpg+disp+wt, data=mtcars, family=poisson()) compute_SensIAT_expected_values(model, alpha= c(-0.3, 0, 0.3), new.data = mtcars[1:5, ]) |>     dplyr::mutate('E(y|alpha)' = .data$E_Yexp_alphaY/.data$E_exp_alphaY) #> # A tibble: 15 × 15 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb alpha #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6   160   110  3.9   2.62  16.5     0     1     4     4  -0.3 #>  2  21       6   160   110  3.9   2.88  17.0     0     1     4     4  -0.3 #>  3  22.8     4   108    93  3.85  2.32  18.6     1     1     4     1  -0.3 #>  4  21.4     6   258   110  3.08  3.22  19.4     1     0     3     1  -0.3 #>  5  18.7     8   360   175  3.15  3.44  17.0     0     0     3     2  -0.3 #>  6  21       6   160   110  3.9   2.62  16.5     0     1     4     4   0   #>  7  21       6   160   110  3.9   2.88  17.0     0     1     4     4   0   #>  8  22.8     4   108    93  3.85  2.32  18.6     1     1     4     1   0   #>  9  21.4     6   258   110  3.08  3.22  19.4     1     0     3     1   0   #> 10  18.7     8   360   175  3.15  3.44  17.0     0     0     3     2   0   #> 11  21       6   160   110  3.9   2.62  16.5     0     1     4     4   0.3 #> 12  21       6   160   110  3.9   2.88  17.0     0     1     4     4   0.3 #> 13  22.8     4   108    93  3.85  2.32  18.6     1     1     4     1   0.3 #> 14  21.4     6   258   110  3.08  3.22  19.4     1     0     3     1   0.3 #> 15  18.7     8   360   175  3.15  3.44  17.0     0     0     3     2   0.3 #> # ℹ 3 more variables: E_Yexp_alphaY <dbl>, E_exp_alphaY <dbl>, #> #   `E(y|alpha)` <dbl>"},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_influence_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Influence Terms — compute_influence_terms","title":"Compute Influence Terms — compute_influence_terms","text":"function computes influence terms marginal outcome model sensitivity analysis. generic function can handle different types outcome models.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_influence_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Influence Terms — compute_influence_terms","text":"","code":"compute_influence_terms(outcome.model, intensity.model, alpha, data, ...)  # Default S3 method compute_influence_terms(   outcome.model,   intensity.model,   alpha,   data,   id,   base,   ... )  # S3 method for class '`SensIAT::Single-index-outcome-model`' compute_influence_terms(   outcome.model,   intensity.model,   alpha,   data,   base,   tolerance = .Machine$double.eps^(1/3),   na.action = na.fail,   id = NULL,   time = NULL,   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_influence_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Influence Terms — compute_influence_terms","text":"outcome.model outcome model fitted data. intensity.model intensity model fitted data. alpha numeric vector representing sensitivity parameter. data data frame containing observations. ... Additional arguments passed method. id variable representing patient identifier. base spline basis object. tolerance Numeric value indicating tolerance integration, default .Machine$double.eps^(1/3). na.action Function handle missing values, default na.fail. time Variable indicating time variable data, Default extracted intensity model response.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/compute_influence_terms.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute Influence Terms — compute_influence_terms","text":"compute_influence_terms(default): Generic method, throws implemented error. compute_influence_terms(`SensIAT::Single-index-outcome-model`): Optimized method single index model.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_marginal_mean_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the Marginal Means Model — fit_SensIAT_marginal_mean_model","title":"Fit the Marginal Means Model — fit_SensIAT_marginal_mean_model","text":"Fit Marginal Means Model","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_marginal_mean_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the Marginal Means Model — fit_SensIAT_marginal_mean_model","text":"","code":"fit_SensIAT_marginal_mean_model(   data,   id,   alpha,   knots,   outcome.model,   intensity.model,   spline.degree = 3L,   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_marginal_mean_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the Marginal Means Model — fit_SensIAT_marginal_mean_model","text":"data Data evaluation model. match data used fit intensity outcome models. id subject identifier variable data. Lazy evaluation used, can symbol string. alpha Sensitivity parameter, vector values. knots Location spline knots. SplineBasis object provided, used directly. outcome.model observed effects model. intensity.model assessment time intensity model. spline.degree degree spline basis, default 3 (cubic splines). ... Additional arguments passed compute_influence_terms.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_marginal_mean_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the Marginal Means Model — fit_SensIAT_marginal_mean_model","text":"list fitted model, including coefficients variances alpha value.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_marginal_mean_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the Marginal Means Model — fit_SensIAT_marginal_mean_model","text":"","code":"# Note: example takes approximately 30 seconds to run. # \\donttest{ library(survival) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(splines) # Create followup data with lags # added variables `..prev_time..`, `..delta_time..` and `..prev_outcome..` # have special interpretations when computing the influence. data_with_lags <- SensIAT_example_data |>     dplyr::group_by(Subject_ID) |>     dplyr::mutate(         ..prev_outcome.. = dplyr::lag(Outcome, default = NA_real_, order_by = Time),         ..prev_time.. = dplyr::lag(Time, default = 0, order_by = Time),         ..delta_time.. = Time - dplyr::lag(.data$Time, default = NA_real_, order_by = Time)     )  # Create the observation time intensity model intensity.model <-     coxph(Surv(..prev_time.., Time, !is.na(Outcome)) ~ ..prev_outcome.. + strata(Visit),     data = data_with_lags |> dplyr::filter(.data$Time > 0))  # Create the observed outcome model outcome.model <-     fit_SensIAT_single_index_fixed_coef_model(         Outcome ~ ns(..prev_outcome.., df=3) + ..delta_time.. - 1,         id = Subject_ID,         data = data_with_lags |> filter(Time > 0))  # Fit the marginal outcome model mm <- fit_SensIAT_marginal_mean_model(     data = data_with_lags,     id = Subject_ID,     alpha = c(-0.6, -0.3, 0, 0.3, 0.6),     knots = c(60, 260, 460),     intensity.model = intensity.model,     time.vars = c('..delta_time..'),     outcome.model = outcome.model) # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_fixed_coef_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","title":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","text":"Outcome Modeler SensIAT Single Index Model.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_fixed_coef_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","text":"","code":"fit_SensIAT_single_index_fixed_coef_model(   formula,   data,   kernel = \"K2_Biweight\",   method = \"nmk\",   id = ..id..,   initial = NULL,   ... )  fit_SensIAT_single_index_fixed_bandwidth_model(   formula,   data,   kernel = \"K2_Biweight\",   method = \"nmk\",   id = ..id..,   initial = NULL,   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_fixed_coef_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","text":"formula outcome model formula data data fit outcome model . include follow-data, .e. time > 0. kernel kernel use outcome model. method optimization method use outcome model, either \"optim\", \"nlminb\", \"nmk\". id patient identifier variable data. initial Either vector initial values function estimate initial values. NULL (default), initial values estimated using MAVE::mave.compute function. ... Currently ignored, included future compatibility.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_fixed_coef_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","text":"Object class SensIAT::Single-index-outcome-model contains outcome model portion.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_fixed_coef_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","text":"fit_SensIAT_single_index_fixed_bandwidth_model(): fitting fixed bandwidth","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_fixed_coef_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outcome Modeler for SensIAT Single Index Model. — fit_SensIAT_single_index_fixed_coef_model","text":"","code":"# \\donttest{ # A basic example using fixed intensity bandwidth. object <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = fit_SensIAT_single_index_fixed_bandwidth_model,         id = Subject_ID,         outcome = Outcome,         time = Time,         knots = c(60,260,460),         End = 830,         intensity.args=list(bandwidth=30)     )  # A basic example using variable bandwidth but with fixed first coefficient. object.bw <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,         id = Subject_ID,         outcome = Outcome,         time = Time,         knots = c(60,260,460),         End = 830,         intensity.args=list(bandwidth=30)     ) # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_norm1coef_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Index Model using MAVE and Optimizing Bandwidth. — fit_SensIAT_single_index_norm1coef_model","title":"Single Index Model using MAVE and Optimizing Bandwidth. — fit_SensIAT_single_index_norm1coef_model","text":"Single index model estimation using minimum average variance estimation (MAVE). direction estimated using MAVE, bandwidth selected minimization cross-validated pseudo-integrated squared error. Optionally, initial coefficients outcome model can re-estimated optimization spherical manifold.  option requires ManifoldOptim package.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_norm1coef_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Index Model using MAVE and Optimizing Bandwidth. — fit_SensIAT_single_index_norm1coef_model","text":"","code":"fit_SensIAT_single_index_norm1coef_model(   formula,   data,   kernel = \"K2_Biweight\",   mave.method = \"meanMAVE\",   id = ..id..,   bw.selection = c(\"ise\", \"mse\"),   bw.method = c(\"optim\", \"grid\", \"optimize\"),   bw.range = c(0.01, 1.5),   reestimate.coef = 0,   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_norm1coef_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Index Model using MAVE and Optimizing Bandwidth. — fit_SensIAT_single_index_norm1coef_model","text":"formula outcome model formula data data fit outcome model . include follow-data, .e. time > 0. kernel kernel use outcome model. mave.method method use MAVE estimation. id patient identifier variable data. bw.selection criteria bandwidth selection, either 'ise' Integrated Squared Error 'mse' Mean Squared Error. bw.method method bandwidth selection, either 'optim' using optimization 'grid' grid search. bw.range numeric vector length 2 indicating range bandwidths consider selection multiple standard deviation single index predictor. reestimate.coef number iterations go . ... Additional arguments passed optim.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_single_index_norm1coef_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Index Model using MAVE and Optimizing Bandwidth. — fit_SensIAT_single_index_norm1coef_model","text":"Object class SensIAT::Single-index-outcome-model contains outcome model portion.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"Produces fitted model may used produce estimates mean variance given group.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"","code":"fit_SensIAT_fulldata_model(data, trt, ...)  fit_SensIAT_within_group_model(   group.data,   outcome_modeler,   id,   outcome,   time,   knots,   alpha = 0,   End = NULL,   intensity.args = list(),   outcome.args = list(),   influence.args = list(),   spline.degree = 3,   add.terminal.observations = TRUE )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"data full data set. trt expression determine treated treatment. Everything treatment considered control. ... common arguments passed fit_SensIAT_within_group_model. group.data data group analyzed. Preferably passed single tibble internally subsetted/filtered needed. outcome_modeler function fitting outcome model. Called formula, data argument outcome.args list. id variable identifies patient. outcome variable contains outcome. time variable contains time. knots knot locations defining spline basis. alpha sensitivity parameter. End end time data analysis, need set default value max value time. intensity.args list optional arguments intensity model. See Intensity Arguments section. outcome.args parameters needed passed outcome_modeler. One special element may 'model.modifications' , present, formula used modify outcome model per, update.formula. influence.args list optional arguments used computing influence. See Influence Arguments section. spline.degree degree spline basis. add.terminal.observations Logical indicating whether add terminal observations data.  TRUE, data may contain NAs. FALSE, data assumed already include terminal observations","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"list class SensIAT-fulldata-fitted-model two components, control treatment, independently fitted SensIAT-within-group-fitted-model fit fit_within_group_model function. return everything needed define fit model. can used producing estimates mean, variance, turn treatment effect.  full data model list two models one treatment control groups.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"function agnostic whether provided treatment control group.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"fit_SensIAT_fulldata_model(): Fit sensitivity analysis treatment control groups.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"intensity-arguments","dir":"Reference","previous_headings":"","what":"Intensity Arguments","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"intensity.args list may contain following elements: model.modifications formula used modify intensity model default, per update.formula. kernel kernel function intensity model. Default Epanechnikov kernel. bandwidth bandwidth intensity model kernel.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"influence-arguments","dir":"Reference","previous_headings":"","what":"Influence Arguments","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"influence.args list may contain following elements: method method integrating, adaptive fixed quadrature. Default 'adaptive'. tolerance tolerance using adaptive quadrature. delta bin width fixed quadrature. resolution alternative delta specifying number bins. fix_discontinuity Whether account discontinuity influence observation times.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"","code":"# \\donttest{ model <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,         alpha = c(-0.6, -0.3, 0, 0.3, 0.6),         id = Subject_ID,         outcome = Outcome,         time = Time,         End = 830,         knots = c(60,260,460),     ) # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/jackknife.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Jackknife Resampling on an Object — jackknife","title":"Perform Jackknife Resampling on an Object — jackknife","text":"Perform Jackknife Resampling Object","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/jackknife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Jackknife Resampling on an Object — jackknife","text":"","code":"jackknife(object, ...)  # S3 method for class 'SensIAT_within_group_model' jackknife(object, time, ...)  # S3 method for class 'SensIAT_fulldata_model' jackknife(object, time, ...)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/jackknife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Jackknife Resampling on an Object — jackknife","text":"object object cross validate . ... Additional arguments passed method. time Time points estimate response.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/jackknife.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Jackknife Resampling on an Object — jackknife","text":"data frame jackknife resampling results. SensIAT objects, tibble columns alpha, time, jackknife_mean, jackknife_var, jackknife_mean mean jackknife estimates jackknife_var estimated variances response given time points specified alpha values.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/jackknife.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Perform Jackknife Resampling on an Object — jackknife","text":"jackknife(SensIAT_within_group_model): Perform jackknife resampling SensIAT_within_group_model object. jackknife(SensIAT_fulldata_model): Perform jackknife resampling SensIAT_fulldata_model object.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/jackknife.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Jackknife Resampling on an Object — jackknife","text":"","code":"if (FALSE) { # \\dontrun{ object <- fit_SensIAT_within_group_model(     group.data = SensIAT_example_data,     outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,     alpha = c(-0.6, -0.3, 0, 0.3, 0.6),     id = Subject_ID,     outcome = Outcome,     time = Time,     intensity.args=list(bandwidth = 30),     knots = c(60,260,460),     End = 830 ) jackknife.estimates <- SensIAT_jackknife(object, time = c(90, 180, 270, 360, 450)) } # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Parameters for Fitting the within Group Model — pcori_control","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"Control Parameters Fitting within Group Model","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"","code":"pcori_control(   integration.method = c(\"quadvcpp\", \"quadv\", \"linear\", \"numerical\", \"piecewise\"),   intensity.bandwidth = NULL,   resolution = 1000,   resolution.within.period = 50,   tol = .Machine$double.eps^(1/4),   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"integration.method Method integration computing second influence term. intensity.bandwidth bandwidth intensity model. resolution number points use numerical integration. resolution.within.period number points use numerical integration within period. tol tolerance numerical integration. ... Currently ignored.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"list control parameters.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs an optimized implementation of the ","title":"Runs an optimized implementation of the ","text":"Runs optimized implementation \"NW\" function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs an optimized implementation of the ","text":"","code":"pcoriaccel_NW(Xb, Y, xb, y_seq, h, kernel = \"K2_Biweight\")"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs an optimized implementation of the ","text":"Xb vector (expected 500 elements) Y vector (size Xb) xb vector y_seq vector h scalar, bandwidth kernel kernel string, denoting kernel function use, either \"dnorm\", \"K2_Biweight\", \"K4_Biweight\"","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs an optimized implementation of the ","text":"matrix size xb y_seq.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a basic implementation of the ","title":"Runs a basic implementation of the ","text":"Runs basic implementation \"NW\" function \"K2_Biweight\" kernel, just proof--concept.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a basic implementation of the ","text":"","code":"pcoriaccel_NW_basic(Xb, Y, xb, y_seq, h)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a basic implementation of the ","text":"Xb vector (expected 500 elements) Y vector (size Xb) xb vector y_seq vector h scalar, bandwidth kernel","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a basic implementation of the ","text":"matrix size xb y_seq.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"Runs optimized implementation compute_influence_term_2_quadv_sim_via_matrix function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"","code":"pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix(   X,   Y,   times,   individual_X,   x_slope,   alpha,   beta,   spline_basis,   bandwidth,   tol = 0.0001220703,   kernel = \"K2_Biweight\" )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"X Matrix covariates, transformed necessary model Y Vector outcomes (length column X) times Vector observation times individual individual_X Matrix covariates individual rows correspond times prepared inferences integration. x_slope Vector numeric(length(beta)) indicating alpha Vector sensitivity parameters beta Vector coefficients outcome model spline_basis Spline basis object (orthogonalsplinebasis::SplineBasis) bandwidth Bandwidth kernel density estimate outcome model. tol Tolerance integration kernel Kernel function use kernel density estimate","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"integration result","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_estimate_pmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","title":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","text":"Directly estimate probability mass function Y.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_estimate_pmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","text":"","code":"pcoriaccel_estimate_pmf(Xb, Y, xi, y_seq, h, kernel = \"K2_Biweight\")"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_estimate_pmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","text":"Xb Numeric vector individual linear predictors data Y Numeric vector individual responses data xi value individuals linear predictor point estimation y_seq Numeric vector unique values Y. h bandwidth kernel kernel character string specifying kernel use, either \"dnorm\", \"K2_Biweight\", \"K4_Biweight\"","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"Compiled version evaluate_basis() function","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"","code":"pcoriaccel_evaluate_basis(spline_basis, x)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"spline_basis spline basis, S4 class orthogonalsplinebasis::SplineBasis x point evaluate","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"Vector basis functions evaluated x.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compiled version of evaluate_basis() function (matrix version) — pcoriaccel_evaluate_basis_mat","title":"Compiled version of evaluate_basis() function (matrix version) — pcoriaccel_evaluate_basis_mat","text":"Compiled version evaluate_basis() function (matrix version)","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compiled version of evaluate_basis() function (matrix version) — pcoriaccel_evaluate_basis_mat","text":"","code":"pcoriaccel_evaluate_basis_mat(spline_basis, x)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compiled version of evaluate_basis() function (matrix version) — pcoriaccel_evaluate_basis_mat","text":"spline_basis spline basis, S4 class orthogonalsplinebasis::SplineBasis x numeric vector points evaluate","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compiled version of evaluate_basis() function (matrix version) — pcoriaccel_evaluate_basis_mat","text":"Matrix basis functions evaluated x.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"Integrate function using adaptive Simpson quadrature.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"","code":"pcoriaccel_integrate_simp(integrand, lo, hi, tol = 1.490116e-08)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"integrand integrand, must take scalar argument, may return scalar, vector, matrix. lo Lower integration bound hi Upper integration bound tol Tolerance integration, default .Machine$double.eps^(1/2)","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"integration result, list elements $Q (integral estimate), $fcnt (number function evaluations), $estim.prec ((pessimistic) estimate precision).","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","title":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","text":"Give marginal mean model estimate","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","text":"","code":"# S3 method for class 'SensIAT_fulldata_model' predict(object, time, ...)  # S3 method for class 'SensIAT_within_group_model' predict(object, time, include.var = TRUE, ..., base = object$base)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","text":"object SensIAT_within_group_model object time Time points interest ... Currently ignored. include.var Logical. TRUE, variance outcome also returned base SplineBasis object used evaluate basis functions.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","text":"include.var TRUE, tibble columns time, mean, var returned. otherwise include.var FALSE, mean vector returned.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","text":"predict(SensIAT_fulldata_model): combination time alpha estimate mean response variance group well estimate mean treatment effect variance.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Give the Marginal Mean Estimate and its Estimated Asymptotic Variance — predict.SensIAT_fulldata_model","text":"","code":"# \\donttest{ model <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = fit_SensIAT_single_index_fixed_coef_model,         alpha = c(-0.6, -0.3, 0, 0.3, 0.6),         id = Subject_ID,         outcome = Outcome,         time = Time,         End = 830,         knots = c(60,260,460),     ) predict(model, time = c(90, 180)) #> # A tibble: 10 × 4 #>    alpha  time  mean     var #>    <dbl> <dbl> <dbl>   <dbl> #>  1  -0.6    90  1.47 0.00983 #>  2  -0.6   180  1.58 0.00654 #>  3  -0.3    90  1.68 0.00996 #>  4  -0.3   180  1.84 0.00699 #>  5   0      90  1.95 0.0105  #>  6   0     180  2.13 0.00858 #>  7   0.3    90  2.28 0.0120  #>  8   0.3   180  2.47 0.0123  #>  9   0.6    90  2.65 0.0130  #> 10   0.6   180  2.83 0.0197  # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/prepare_SensIAT_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data for Sensitivity Analysis with Irregular Assessment Times — prepare_SensIAT_data","title":"Prepare Data for Sensitivity Analysis with Irregular Assessment Times — prepare_SensIAT_data","text":"function prepares data SensIAT analysis transforming format suitable SensIAT models.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/prepare_SensIAT_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data for Sensitivity Analysis with Irregular Assessment Times — prepare_SensIAT_data","text":"","code":"prepare_SensIAT_data(   data,   id.var,   time.var,   outcome.var,   End,   add.terminal.observations = TRUE )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/prepare_SensIAT_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data for Sensitivity Analysis with Irregular Assessment Times — prepare_SensIAT_data","text":"data data frame containing data prepared. id.var variable data identifies subject. time.var variable data identifies time observation. outcome.var variable data contains outcome interest. End end time analysis. Observations time greater End filtered . add.terminal.observations Logical indicating whether add terminal observations data (TRUE), terminal observations already added (FALSE).","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/prepare_SensIAT_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data for Sensitivity Analysis with Irregular Assessment Times — prepare_SensIAT_data","text":"data frame following transformations: Data filtered time less equal End. Observations arranged id.var time.var. Terminal observations added add.terminal.observations TRUE, ..time.. set End ..outcome.. set NA, subject less observations maximum number observations. New variables created: ..id.. aliases id.var, ..time.. aliases time.var, ..outcome.. aliases outcome.var, ..visit_number.. visit number within subject derived time.var, ..prev_outcome.., .e. lag-outcome,  outcome previous visit, ..prev_time.., .e. lag-time, time previous visit, ..delta_time.., difference time current previous visit.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/prepare_SensIAT_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Data for Sensitivity Analysis with Irregular Assessment Times — prepare_SensIAT_data","text":"","code":"prepare_SensIAT_data( SensIAT_example_data, Subject_ID, Time, Outcome, 830) #> # A tibble: 1,000 × 11 #>    ..id.. ..visit_number.. Subject_ID Visit  Time Outcome ..time.. ..outcome.. #>     <int>            <int>      <int> <dbl> <dbl>   <dbl>    <dbl>       <dbl> #>  1      1                0          1     0     0   3            0       3     #>  2      1                1          1     1   214   4.5        214       4.5   #>  3      1                2          1     2   292   4.17       292       4.17  #>  4      1                3          1     3   370   1.33       370       1.33  #>  5      1                4          1     4   441   0.833      441       0.833 #>  6      2                0          2     0     0   3            0       3     #>  7      2                1          2     1    72   0.5         72       0.5   #>  8      2                2          2     2   181   2          181       2     #>  9      2                3          2     3   297   1.5        297       1.5   #> 10      2                4          2     4   366   1.83       366       1.83  #> # ℹ 990 more rows #> # ℹ 3 more variables: ..prev_outcome.. <dbl>, ..prev_time.. <dbl>, #> #   ..delta_time.. <dbl>  exdata <- tibble::tibble(ID=rep(1:2, c(3,5)),                          Time=c(0, 30, 60,                                 0, 30, 60, 90, 120),                          Outcome=floor(runif(8, 1, 100)))  prepare_SensIAT_data(exdata, ID, Time, Outcome, 120) #> # A tibble: 10 × 10 #>    ..id.. ..visit_number..    ID  Time Outcome ..time.. ..outcome.. #>     <int>            <int> <int> <dbl>   <dbl>    <dbl>       <dbl> #>  1      1                0     1     0       6        0           6 #>  2      1                1     1    30      53       30          53 #>  3      1                2     1    60      69       60          69 #>  4      1                3     1   120      NA      120          NA #>  5      1                4     1   120      NA      120          NA #>  6      2                0     2     0      69        0          69 #>  7      2                1     2    30       4       30           4 #>  8      2                2     2    60      23       60          23 #>  9      2                3     2    90      30       90          30 #> 10      2                4     2   120      64      120          64 #> # ℹ 3 more variables: ..prev_outcome.. <dbl>, ..prev_time.. <dbl>, #> #   ..delta_time.. <dbl>"},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":null,"dir":"","previous_headings":"","what":"(WIP) Package development roadmap","title":"(WIP) Package development roadmap","text":"get PCORI R package published CRAN, need complete following activities: Write R functions document package using roxygen similar. testing framework running testthat x number vignettes written rmarkdown quarto (sure latter). Submit R package test (Windows, OSX, Ubutnu) x (R current, R dev, R old rel). one activities complexities . experience, setting testing framework time-consuming. Let’s think one detailed:","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"write-the-r-functions-and-document-them","dir":"","previous_headings":"","what":"Write the R functions and document them","title":"(WIP) Package development roadmap","text":"Since two general methods, see two sets functions: main model fit function, methods associated , particular: print(), plot(), summary(), coef(), predict(), vcov(). methods resulting outputs provide great deal flexibility R functions can grab compute things. One example confit() function. estimate may take two months write two main fit functions one additional month write S3 methods. Considering , ideal world, writing functions go along documentation. incorporate additional month documentation. Furthermore, CRAN requesting -depth documentation, including: short description. Details: Talk method layout formulas (possible). Returns: -depth description output. Examples: one examples function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"preparing-the-tests","dir":"","previous_headings":"","what":"Preparing the tests","title":"(WIP) Package development roadmap","text":"Testing fundamental, can take lot work. usually create one handful tests evaluating () typical cases, (ii) borderline cases, (iii) potential errors (catching errors data). Building tests requires generating artificial data know exactly expected results, fit model, hope model behaves expected. complexity, allocate two months work activity.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"write-x-vignettes","dir":"","previous_headings":"","what":"Write x vignettes","title":"(WIP) Package development roadmap","text":"Vignettes great help R packages. Although complicated paper, perfect vignette extended example start end package. instance, loading data, preparing data (needed), fitting model, post-estimation analyses. allocate one month work vignette.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"cran-submission","dir":"","previous_headings":"","what":"CRAN submission","title":"(WIP) Package development roadmap","text":"followed previous steps detail, submitting R package straightforward. point, ensure package runs multiple OS versions R (least R-dev R-release). conservative, take one month get bit done (thinking two three submissions, just like paper review process.)","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"final-count","dir":"","previous_headings":"","what":"Final count","title":"(WIP) Package development roadmap","text":"Write R functions document : 3 months Preparing tests: 2 months. Write x vignettes: Assuming 2, 2 months. CRAN submission: 1 month. Total, 8 months. Providing wiggle room (accounting usual estimation time,) say 8 x 1.5 = 12 months (magic, unexpected).","code":""},{"path":[]},{"path":"https://uofuepibio.github.io/SensIAT/news/index.html","id":"sensiat-030","dir":"Changelog","previous_headings":"","what":"SensIAT 0.3.0","title":"SensIAT 0.3.0","text":"CRAN release: 2025-09-05 Conformed names standard starting verbs. Documentation fixes updates. Removed unnecessarily exported functions. Updated single index model norm 1 coefficients allow multiple iterations. Various bug fixes. Source code cleanup.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/news/index.html","id":"sensiat-020","dir":"Changelog","previous_headings":"","what":"SensIAT 0.2.0","title":"SensIAT 0.2.0","text":"CRAN release: 2025-08-18 MAVE (Minimum Average Variance Estimation) Fixed bandwidth, bandwidth held constant coefficients allowed vary freely.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/news/index.html","id":"sensiat-011","dir":"Changelog","previous_headings":"","what":"SensIAT 0.1.1","title":"SensIAT 0.1.1","text":"CRAN release: 2024-11-17 Bug fix compiling Debian systems without C++20.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/news/index.html","id":"sensiat-010","dir":"Changelog","previous_headings":"","what":"SensIAT 0.1.0","title":"SensIAT 0.1.0","text":"CRAN release: 2024-11-01 Initial CRAN submission. Beta Release. Includes support 'dnorm' 'K2_biweight'(quartic) kernels.","code":""}]
