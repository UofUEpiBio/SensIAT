[{"path":"https://uofuepibio.github.io/SensIAT/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 University Utah Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Redd. Author, maintainer. Yujing Gao. Author. Shu Yang. Author. Bonnie Smith. Author. Ravi Varadhan. Author. Agatha Mallett. Contributor, contractor. Daniel Scharfstein. Project director, author. University Utah. Copyright holder.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Redd , Gao Y, Yang S, Smith B, Varadhan R, Scharfstein D (2024). SensIAT: Sensitivity Analysis Irregular Assessment Times. R package version 0.1.1.9000, https://uofuepibio.github.io/SensIAT/, https://github.com/UofUEpiBio/SensIAT.","code":"@Manual{,   title = {SensIAT: Sensitivity Analysis for Irregular Assessment Times},   author = {Andrew Redd and Yujing Gao and Shu Yang and Bonnie Smith and Ravi Varadhan and Daniel Scharfstein},   year = {2024},   note = {R package version 0.1.1.9000, https://uofuepibio.github.io/SensIAT/},   url = {https://github.com/UofUEpiBio/SensIAT}, }"},{"path":"https://uofuepibio.github.io/SensIAT/index.html","id":"sensiat","dir":"","previous_headings":"","what":"Sensitivity Analysis for Irregular Assessment Times","title":"Sensitivity Analysis for Irregular Assessment Times","text":"R Package sensitivity analysis irregular assessment times. link paper describing methodology can found .","code":""},{"path":"https://uofuepibio.github.io/SensIAT/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sensitivity Analysis for Irregular Assessment Times","text":"can also install current development version GitHub:","code":"# Install from CRAN install.packages(\"SensIAT\") devtools::install_github(\"UofUEpiBio/pcoriRPackage\")"},{"path":"https://uofuepibio.github.io/SensIAT/reference/Cond_mean_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Subject Predicted Mean Outcome — Cond_mean_fn","title":"Estimate Subject Predicted Mean Outcome — Cond_mean_fn","text":"function used get subject's predicted mean outcome given sensitivity parameter value alpha. specific outcome model used ARC data (negative binomial), specific tilting function alpha*Y(t), need changed using different outcome model different tilting function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/Cond_mean_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Subject Predicted Mean Outcome — Cond_mean_fn","text":"","code":"Cond_mean_fn(mu, theta, alpha)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/Cond_mean_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Subject Predicted Mean Outcome — Cond_mean_fn","text":"mu mean theta size alpha sensitivity","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/Cond_mean_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Subject Predicted Mean Outcome — Cond_mean_fn","text":"list containing \\(\\frac{E[ Y exp(\\alpha Y) ]}{E[ exp(\\alpha Y)]}\\) $E[ exp(\\alpha Y) ]$ Y (truncated version ) negative binomial mean mu size theta.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SensIAT: Sensitivity Analysis for Irregular Assessment Times — SensIAT-package","title":"SensIAT: Sensitivity Analysis for Irregular Assessment Times — SensIAT-package","text":"Sensitivity analysis trials irregular informative assessment times, based new influence function-based, augmented inverse intensity-weighted estimator.","code":""},{"path":[]},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SensIAT: Sensitivity Analysis for Irregular Assessment Times — SensIAT-package","text":"Maintainer: Andrew Redd andrew.redd@hsc.utah.edu (ORCID) Authors: Yujing Gao ygao39@ncsu.edu Shu Yang syang24@ncsu.edu Bonnie Smith bsmit179@jhmi.edu Daniel Scharfstein daniel.scharfstein@hsc.utah.edu (ORCID) [project director] contributors: Agatha Mallett agatha@geometrian.com [contributor, contractor] University Utah [copyright holder]","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"SensIAT Example Data — SensIAT_example_data","title":"SensIAT Example Data — SensIAT_example_data","text":"simulated dataset use SensIAT tutorial, testing documentation.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SensIAT Example Data — SensIAT_example_data","text":"","code":"SensIAT_example_data"},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SensIAT Example Data — SensIAT_example_data","text":"data frame 779 rows 4 variables consisting 200 simulated patients.  row data represents visit patient. columns : Subject_ID unique identifier patient. Visit ordinal number visit patient.  Baseline observation 0. Time time visit days, since baseline. Outcome outcome interest.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_jackknife.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate response with jackknife resampling — SensIAT_jackknife","title":"Estimate response with jackknife resampling — SensIAT_jackknife","text":"Estimate response jackknife resampling","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_jackknife.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate response with jackknife resampling — SensIAT_jackknife","text":"","code":"SensIAT_jackknife(original.object, time, ...)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_jackknife.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate response with jackknife resampling — SensIAT_jackknife","text":"original.object SensIAT_within_group_model object. time Time points estimate response. ... currently ignored.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_jackknife.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate response with jackknife resampling — SensIAT_jackknife","text":"tibble columns alpha, time, jackknife_mean, jackknife_var, jackknife_mean mean jackknife estimates jackknife_var estimated variances response given time points specified alpha values.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_jackknife.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate response with jackknife resampling — SensIAT_jackknife","text":"","code":"if (FALSE) { # \\dontrun{ original.object <- fit_SensIAT_within_group_model(     group.data = SensIAT_example_data,     outcome_modeler = SensIAT_sim_outcome_modeler,     alpha = c(-0.6, -0.3, 0, 0.3, 0.6),     id.var = Subject_ID,     outcome.var = Outcome,     time.var = Time,     intensity.bandwidth = 30,     knots = c(60,60,60,60,260,460,460,460,460),     End = 830 ) jackknife.estimates <- SensIAT_jackknife(original.object, time = c(90, 180, 270, 360, 450)) } # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_sim_outcome_modeler.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome Modeler for SensIAT Single Index Model. — SensIAT_sim_outcome_modeler","title":"Outcome Modeler for SensIAT Single Index Model. — SensIAT_sim_outcome_modeler","text":"Outcome Modeler SensIAT Single Index Model.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_sim_outcome_modeler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome Modeler for SensIAT Single Index Model. — SensIAT_sim_outcome_modeler","text":"","code":"SensIAT_sim_outcome_modeler(   formula,   data,   kernel = \"K2_Biweight\",   method = \"nmk\",   id = ..id..,   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_sim_outcome_modeler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome Modeler for SensIAT Single Index Model. — SensIAT_sim_outcome_modeler","text":"formula outcome model formula data data fit outcome model . include follow-data, .e. time > 0. kernel kernel use outcome model. method optimization method use outcome model, either \"optim\", \"nlminb\", \"nmk\". id patient identifier variable data. ... Currently ignored, included future compatibility.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_sim_outcome_modeler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outcome Modeler for SensIAT Single Index Model. — SensIAT_sim_outcome_modeler","text":"Object class SensIAT::Single-index-outcome-model contains outcome model portion.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/SensIAT_sim_outcome_modeler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outcome Modeler for SensIAT Single Index Model. — SensIAT_sim_outcome_modeler","text":"","code":"# \\donttest{ model <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = SensIAT_sim_outcome_modeler,         alpha = c(-0.6, -0.3, 0, 0.3, 0.6),         id.var = Subject_ID,         outcome.var = Outcome,         time.var = Time,         End = 830,         knots = c(60,60,60,60,260,460,460,460,460),     ) # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"Produces fitted model may used produce estimates mean variance given group.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"","code":"fit_SensIAT_fulldata_model(data, trt, ...)  fit_SensIAT_within_group_model(   group.data,   outcome_modeler,   knots,   id.var,   outcome.var,   time.var,   alpha = 0,   intensity.covariates = ~.,   outcome.covariates = ~. - 1,   End = max({      {          time.var      }  }, na.rm = TRUE) + 1,   integration.tolerance = .Machine$double.eps^(1/3),   intensity.bandwidth = NULL,   ...,   influence.args = list() )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"data full data set. trt expression determine treated treatment. Everything treatment considered control. ... add parameters needed use pass forward outcome_modeler. group.data data group analyzed. Preferably passed single tibble internally subsetted/filtered needed. outcome_modeler separate function may swapped switch negative-binomial, single index model, another dream future. knots knot locations defining spline basis. id.var variable identifies patient. outcome.var variable contains outcome. time.var variable contains time. alpha sensitivity parameter. intensity.covariates formula representing modifications intensity model. outcome.covariates formula representing modifications outcome model.  default removes intercept term. End end time data analysis, need set default value max value time integration.tolerance tolerance integration. intensity.bandwidth bandwidth intensity model kernel. influence.args list additional arguments pass influence function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"list class SensIAT-fulldata-fitted-model two components, control treatment, independently fitted SensIAT-within-group-fitted-model fit fit_within_group_model function. return everything needed define fit model. can used producing estimates mean, variance, turn treatment effect.  full data model list two models one treatment control groups.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"function agnostic whether provided treatment control group.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"fit_SensIAT_fulldata_model(): Fit sensitivity analysis treatment control groups.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/fit_SensIAT_within_group_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce fitted model for group (treatment or control) — fit_SensIAT_fulldata_model","text":"","code":"# \\donttest{ model <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = SensIAT_sim_outcome_modeler,         alpha = c(-0.6, -0.3, 0, 0.3, 0.6),         id.var = Subject_ID,         outcome.var = Outcome,         time.var = Time,         End = 830,         knots = c(60,60,60,60,260,460,460,460,460),     ) # }"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_conditional_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Conditional Means — pcori_conditional_means","title":"Compute Conditional Means — pcori_conditional_means","text":"Compute Conditional Means","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_conditional_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Conditional Means — pcori_conditional_means","text":"","code":"pcori_conditional_means(model, alpha = 0, new.data = model.frame(model), ...)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_conditional_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Conditional Means — pcori_conditional_means","text":"model object class SensIAT::outcome-model alpha Sensitivity parameter new.data Data compute conditional means , defaults model frame fitted model. ... passed onto methods.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_conditional_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Conditional Means — pcori_conditional_means","text":"new.data frame additional columns E_Y_past, E_exp_alphaY appended.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_conditional_means.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Conditional Means — pcori_conditional_means","text":"Compute conditional expectations needed predictions models. Three additional values/expectations computed: $E \\big[ Y(t) \\exp \\{  \\alpha Y(t) \\}   | (t)=1, \\bar{O}(t) \\big]$, returned E_y_past, $E \\big[ \\exp \\{ \\alpha Y(t) \\} \\  | (t)=1, \\bar{O}(t) \\big]$, returned E_exp_alphaY.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Parameters for Fitting the within Group Model — pcori_control","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"Control Parameters Fitting within Group Model","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"","code":"pcori_control(   integration.method = c(\"quadvcpp\", \"quadv\", \"linear\", \"numerical\", \"piecewise\"),   intensity.bandwidth = NULL,   resolution = 1000,   resolution.within.period = 50,   tol = .Machine$double.eps^(1/4),   ... )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"integration.method Method integration computing second influence term. intensity.bandwidth bandwidth intensity model. resolution number points use numerical integration. resolution.within.period number points use numerical integration within period. tol tolerance numerical integration. ... Currently ignored.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcori_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Parameters for Fitting the within Group Model — pcori_control","text":"list control parameters.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs an optimized implementation of the ","title":"Runs an optimized implementation of the ","text":"Runs optimized implementation \"NW\" function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs an optimized implementation of the ","text":"","code":"pcoriaccel_NW(Xb, Y, xb, y_seq, h, kernel = \"K2_Biweight\")"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs an optimized implementation of the ","text":"Xb vector (expected 500 elements) Y vector (size Xb) xb vector y_seq vector h scalar, bandwidth kernel kernel string, denoting kernel function use, either \"dnorm\", \"K2_Biweight\", \"K4_Biweight\"","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs an optimized implementation of the ","text":"matrix size xb y_seq.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a basic implementation of the ","title":"Runs a basic implementation of the ","text":"Runs basic implementation \"NW\" function \"K2_Biweight\" kernel, just proof--concept.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a basic implementation of the ","text":"","code":"pcoriaccel_NW_basic(Xb, Y, xb, y_seq, h)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a basic implementation of the ","text":"Xb vector (expected 500 elements) Y vector (size Xb) xb vector y_seq vector h scalar, bandwidth kernel","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_NW_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a basic implementation of the ","text":"matrix size xb y_seq.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"Runs optimized implementation compute_influence_term_2_quadv_sim_via_matrix function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"","code":"pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix(   X,   Y,   times,   individual_X,   x_slope,   alpha,   beta,   spline_basis,   bandwidth,   tol = 0.0001220703,   kernel = \"K2_Biweight\" )"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"X Matrix covariates, transformed necessary model Y Vector outcomes (length column X) times Vector observation times individual individual_X Matrix covariates individual rows correspond times prepared inferences integration. x_slope Vector numeric(length(beta)) indicating alpha Vector sensitivity parameters beta Vector coefficients outcome model spline_basis Spline basis object (orthogonalsplinebasis::SplineBasis) bandwidth Bandwidth kernel density estimate outcome model. tol Tolerance integration kernel Kernel function use kernel density estimate","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs an optimized implementation of the compute_influence_term_2_quadv_sim_via_matrix function. — pcoriaccel_compute_influence_term_2_quadv_sim_via_matrix","text":"integration result","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_estimate_pmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","title":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","text":"Directly estimate probability mass function Y.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_estimate_pmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","text":"","code":"pcoriaccel_estimate_pmf(Xb, Y, xi, y_seq, h, kernel = \"K2_Biweight\")"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_estimate_pmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directly estimate the probability mass function of Y. — pcoriaccel_estimate_pmf","text":"Xb Numeric vector individual linear predictors data Y Numeric vector individual responses data xi value individuals linear predictor point estimation y_seq Numeric vector unique values Y. h bandwidth kernel kernel character string specifying kernel use, either \"dnorm\", \"K2_Biweight\", \"K4_Biweight\"","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"Compiled version evaluate_basis() function","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"","code":"pcoriaccel_evaluate_basis(spline_basis, x)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"spline_basis spline basis, S4 class orthogonalsplinebasis::SplineBasis x point evaluate","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_evaluate_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compiled version of evaluate_basis() function — pcoriaccel_evaluate_basis","text":"Vector basis functions evaluated x.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"Integrate function using adaptive Simpson quadrature.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"","code":"pcoriaccel_integrate_simp(integrand, lo, hi, tol = 1.490116e-08)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"integrand integrand, must take scalar argument, may return scalar, vector, matrix. lo Lower integration bound hi Upper integration bound tol Tolerance integration, default .Machine$double.eps^(1/2)","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/pcoriaccel_integrate_simp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate function using adaptive Simpson quadrature. — pcoriaccel_integrate_simp","text":"integration result, list elements $Q (integral estimate), $fcnt (number function evaluations), $estim.prec ((pessimistic) estimate precision).","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","title":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","text":"Predict mean variance outcome SensIAT within-group model","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","text":"","code":"# S3 method for class 'SensIAT_fulldata_model' predict(object, time, ...)  # S3 method for class 'SensIAT_within_group_model' predict(object, time, include.var = TRUE, ..., base = object$base)"},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","text":"object SensIAT_within_group_model object time Time points interest ... Currently ignored. include.var Logical. TRUE, variance outcome also returned base SplineBasis object used evaluate basis functions.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","text":"include.var TRUE, tibble columns time, mean, var returned. otherwise include.var FALSE, mean vector returned.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","text":"predict(SensIAT_fulldata_model): combination time alpha estimate mean response variance group well estimate mean treatment effect variance.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/reference/predict.SensIAT_within_group_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict mean and variance of the outcome for a SensIAT within-group model — predict.SensIAT_fulldata_model","text":"","code":"# \\donttest{ model <-     fit_SensIAT_within_group_model(         group.data = SensIAT_example_data,         outcome_modeler = SensIAT_sim_outcome_modeler,         alpha = c(-0.6, -0.3, 0, 0.3, 0.6),         id.var = Subject_ID,         outcome.var = Outcome,         time.var = Time,         End = 830,         knots = c(60,60,60,60,260,460,460,460,460),     ) predict(model, time = c(90, 180)) #> # A tibble: 10 × 4 #>    alpha  time  mean     var #>    <dbl> <dbl> <dbl>   <dbl> #>  1  -0.6    90  1.46 0.00966 #>  2  -0.6   180  1.55 0.00640 #>  3  -0.3    90  1.68 0.0103  #>  4  -0.3   180  1.81 0.00688 #>  5   0      90  1.95 0.0113  #>  6   0     180  2.10 0.00874 #>  7   0.3    90  2.29 0.0141  #>  8   0.3   180  2.43 0.0125  #>  9   0.6    90  2.70 0.0194  #> 10   0.6   180  2.78 0.0178  # }"},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":null,"dir":"","previous_headings":"","what":"(WIP) Package development roadmap","title":"(WIP) Package development roadmap","text":"get PCORI R package published CRAN, need complete following activities: Write R functions document package using roxygen similar. testing framework running testthat x number vignettes written rmarkdown quarto (sure latter). Submit R package test (Windows, OSX, Ubutnu) x (R current, R dev, R old rel). one activities complexities . experience, setting testing framework time-consuming. Let’s think one detailed:","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"write-the-r-functions-and-document-them","dir":"","previous_headings":"","what":"Write the R functions and document them","title":"(WIP) Package development roadmap","text":"Since two general methods, see two sets functions: main model fit function, methods associated , particular: print(), plot(), summary(), coef(), predict(), vcov(). methods resulting outputs provide great deal flexibility R functions can grab compute things. One example confit() function. estimate may take two months write two main fit functions one additional month write S3 methods. Considering , ideal world, writing functions go along documentation. incorporate additional month documentation. Furthermore, CRAN requesting -depth documentation, including: short description. Details: Talk method layout formulas (possible). Returns: -depth description output. Examples: one examples function.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"preparing-the-tests","dir":"","previous_headings":"","what":"Preparing the tests","title":"(WIP) Package development roadmap","text":"Testing fundamental, can take lot work. usually create one handful tests evaluating () typical cases, (ii) borderline cases, (iii) potential errors (catching errors data). Building tests requires generating artificial data know exactly expected results, fit model, hope model behaves expected. complexity, allocate two months work activity.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"write-x-vignettes","dir":"","previous_headings":"","what":"Write x vignettes","title":"(WIP) Package development roadmap","text":"Vignettes great help R packages. Although complicated paper, perfect vignette extended example start end package. instance, loading data, preparing data (needed), fitting model, post-estimation analyses. allocate one month work vignette.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"cran-submission","dir":"","previous_headings":"","what":"CRAN submission","title":"(WIP) Package development roadmap","text":"followed previous steps detail, submitting R package straightforward. point, ensure package runs multiple OS versions R (least R-dev R-release). conservative, take one month get bit done (thinking two three submissions, just like paper review process.)","code":""},{"path":"https://uofuepibio.github.io/SensIAT/roadmap.html","id":"final-count","dir":"","previous_headings":"","what":"Final count","title":"(WIP) Package development roadmap","text":"Write R functions document : 3 months Preparing tests: 2 months. Write x vignettes: Assuming 2, 2 months. CRAN submission: 1 month. Total, 8 months. Providing wiggle room (accounting usual estimation time,) say 8 x 1.5 = 12 months (magic, unexpected).","code":""},{"path":[]},{"path":"https://uofuepibio.github.io/SensIAT/news/index.html","id":"sensiat-011","dir":"Changelog","previous_headings":"","what":"SensIAT 0.1.1","title":"SensIAT 0.1.1","text":"CRAN release: 2024-11-17 Bug fix compiling Debian systems without C++20.","code":""},{"path":"https://uofuepibio.github.io/SensIAT/news/index.html","id":"sensiat-010","dir":"Changelog","previous_headings":"","what":"SensIAT 0.1.0","title":"SensIAT 0.1.0","text":"CRAN release: 2024-11-01 Initial CRAN submission. Beta Release. Includes support 'dnorm' 'K2_biweight'(quartic) kernels.","code":""}]
