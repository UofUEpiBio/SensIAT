% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCORI_within_group_model.R
\name{fit_PCORI_within_group_model}
\alias{fit_PCORI_within_group_model}
\title{Produce fitted model for group (treatment or control)}
\usage{
fit_PCORI_within_group_model(
  group.data,
  outcome_modeler,
  id.var,
  outcome.var,
  time.var,
  intensity.covariates = ~1,
  outcome.covariates = ~-1,
  End = max({
     {
         time.var
     }
 }, na.rm = TRUE) + 1,
  ...
)
}
\arguments{
\item{group.data}{The data for the group that is being analyzed.
Preferably passed in as a single tibble that internally is
subsetted/filtered as needed.}

\item{outcome_modeler}{A separate function that may be swapped out to switch
between negative-binomial, single index model, or another we will
dream up in the future.}

\item{End}{The end time for this data analysis, we need to set the default value as the
max value of the time}

\item{...}{add parameters as needed or use this to pass forward into the
outcome_modeler.}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{ Should return everything needed to define the fit of the model.
 This can then be used for producing the estimates of mean, variance,
 and in turn treatment effect.
}\if{html}{\out{</div>}}
}
\description{
Produces a fitted model that may be used to produce estimates of mean and
variance for the given group.
}
\details{
This function should be agnostic to whether it is being provided a
treatment or control group.
}
\examples{

fitted.trt.nb <-
    fit_PCORI_within_group_model(
        group.data = filter(ARC_data, Trt=='home_visits'),
        id.var = elig_pid,
        outcome.var = Asthma_control,
        time.var = time,
        intensity.bandwidth = 30,
        End = 830,
        outcome_modeler = glm.nb
    )

fitted.trt.sim <-
    fit_PCORI_within_group_model(
        group.data = filter(ARC_data, Trt=='home_visits'),
        outcome_modeler = PCORI_sim_outcome_modeler,
        id.var = elig_pid,
        outcome.var = Asthma_control,
        time.var = time,
        intensity.bandwidth = 30,
        End = 830
    )

}
